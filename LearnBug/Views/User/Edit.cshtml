@model LearnBug.Models.DomainModels.User
@section styles{
    <link href="~/Scripts/PersianDateTimePicker/jquery-ui-datetimepicker.min.css" rel="stylesheet" />
}
<div>
    <div class="col-md-12">
        <div class="panel panel-default">
            <div class="panel-heading">ویرایش پروفایل</div>
            <div class="panel-body">
                <!-- -->
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.Id)


                        <a class="btn btn-info" data-toggle="modal" data-target="#myModal" onclick="renderPvCangePass('_editPassword')">تغییر رمز عبور</a>
                        <a class="btn btn-info" data-toggle="modal" data-target="#myModal" onclick="renderPvCangePass('_editPicture')">ویرایش عکس پروفایل</a>



                        <div class="form-group">
                            @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Dateofbirth, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <input class="form-control text-box single-line hasDatepicker" id="Dateofbirth" name="Dateofbirth" type="datetime" value="@Model.Dateofbirth.ToPersianDate()">
                                @Html.ValidationMessageFor(model => model.Dateofbirth, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <select name="Gender" class=" form-control" id="Gender">
                                    <option value="0">نا مشخص</option>
                                    <option value="1">مرد</option>
                                    <option value="2">زن</option>
                                </select>
                                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Biography, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Biography, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Biography, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <select id="loc" name="Location" class="form-control">
                                    <option value="value">text</option>
                                </select>
                                @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Save" class="btn btn-success" />
                            </div>
                        </div>
                    </div>
                }

                <!-- -->
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="myModal">
    <div class="modal-dialog">
        <div id="bodypartial" class="modal-content" style="padding:10px;">


        </div>
    </div>

</div>









@section Scripts {
    <script src="~/Scripts/PersianDateTimePicker/jquery-ui-datetimepicker.min.js"></script>
    <script type="text/javascript">
        function changeProfilePicture(type) {
            var img = $("#upload-Preview").attr('src')
            $.ajax({
                url: "/User/changeProfilePicture",
                data: { newPicture: img, type: type },
                type: "Post"
            })
            $('#cancel').click()
            $('#bodypartial').html('')


        }



        var fileReader = new FileReader();
        var filterType = /^(?:image\/bmp|image\/cis\-cod|image\/gif|image\/ief|image\/jpeg|image\/jpeg|image\/jpeg|image\/pipeg|image\/png|image\/svg\+xml|image\/tiff|image\/x\-cmu\-raster|image\/x\-cmx|image\/x\-icon|image\/x\-portable\-anymap|image\/x\-portable\-bitmap|image\/x\-portable\-graymap|image\/x\-portable\-pixmap|image\/x\-rgb|image\/x\-xbitmap|image\/x\-xpixmap|image\/x\-xwindowdump)$/i;
        $("#Dateofbirth").datepicker();

        fileReader.onload = function (event) {
            var image = new Image();

            image.onload = function () {
                document.getElementById("original-Img").src = image.src;
                var canvas = document.createElement("canvas");
                var context = canvas.getContext("2d");
                canvas.width = 200;
                canvas.height = 200;
                context.drawImage(image,
                    0,
                    0,
                    image.width,
                    image.height,
                    0,
                    0,
                    canvas.width,
                    canvas.height
                );

                document.getElementById("upload-Preview").src = canvas.toDataURL();
            }
            image.src = event.target.result;
        };

        var loadImageFile = function () {
            var uploadImage = document.getElementById("upload-Image");

            //check and retuns the length of uploded file.

            //Is Used for validate a valid file.
            var uploadFile = document.getElementById("upload-Image").files[0];

            fileReader.readAsDataURL(uploadFile);
        }

        function renderPvCangePass(a) {
            $.ajax({
                url: "/User/" + a,
                success: function (data) {
                    $('#bodypartial').html(data)
                }
            })


        }
        function EditPassword() {
            var oldPassword = $("#oldPassword").val()
            var newPassword = $("#newPassword").val()
            var confirmPassword = $("#confirmPassword").val()
            if (newPassword == confirmPassword) {
                $.ajax({
                    url: "/User/ChangePassword",
                    data: { oldPassword: oldPassword, newPassword: newPassword, confirmPassword: confirmPassword },
                    type: "Post",
                    dataType: "Json",
                    success: function (data) {
                        if (data.ss) {
                            alert('رمز عبور شما با موفقیت تغیر کرد')
                            document.getElementById('cancel').click()
                            $('#bodypartial').html('')

                        } else {
                            eval(data.js)
                            $("#msg").html(data.msg)
                        }
                    }
                })
            }
        }
        $(function () {
            $.ajax({
                url: "https://api.yarbox.co/api/vv2/provinces",
                type: "GET",
                dataType: "Json",
                success: function (result) {
                    str = "";
                    result.items.forEach(function (item) {
                        str += "<option>" + item + "</option>"

                    });
                    $("#loc").html(str)
                }
            });
        });
    </script>
}
